{"version":3,"sources":["services/noteService.js","components/NoteList.js","components/NoteForm.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","getNotes","async","axios","get","data","NoteList","_ref","notes","setNotes","handleDelete","delete","concat","id","deleteNote","prevNotes","filter","note","_id","React","createElement","map","key","content","onClick","NoteForm","onNoteAdded","setContent","useState","onSubmit","e","preventDefault","newNote","post","addNote","type","value","onChange","target","placeholder","App","useEffect","fetchNotes","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8LAGA,MAAMA,EAAU,8BAEHC,EAAWC,UAEvB,aADuBC,IAAMC,IAAIJ,IACjBK,MCkBFC,MArBEC,IAAyB,IAAxBC,MAAEA,EAAKC,SAAEA,GAAUF,EACpC,MAAMG,EAAeR,eDUIA,iBACFC,IAAMQ,OAAM,GAAAC,OAAIZ,EAAO,KAAAY,OAAIC,KAClCR,KCXTS,CAAWD,GACjBJ,EAAUM,GAAcA,EAAUC,OAAQC,GAASA,EAAKC,MAAQL,KAGjE,OACCM,IAAAC,cAAA,WACCD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UACEZ,EAAMa,IAAKJ,GACXE,IAAAC,cAAA,MAAIE,IAAKL,EAAKC,KACZD,EAAKM,QACNJ,IAAAC,cAAA,UAAQI,QAASA,IAAMd,EAAaO,EAAKC,MAAM,eCUtCO,MAvBElB,IAAqB,IAApBmB,YAAEA,GAAanB,EAChC,MAAOgB,EAASI,GAAcC,mBAAS,IASvC,OACCT,IAAAC,cAAA,QAAMS,SARc3B,UACpB4B,EAAEC,iBACF,MAAMC,OFCe9B,iBACCC,IAAM8B,KAAI,GAAArB,OAAIZ,EAAO,QAAQiB,IACpCZ,KEHO6B,CAAQ,CAAEX,YAChCG,EAAYM,GACZL,EAAW,MAKVR,IAAAC,cAAA,SACCe,KAAK,OACLC,MAAOb,EACPc,SAAWP,GAAMH,EAAWG,EAAEQ,OAAOF,OACrCG,YAAY,4BAEbpB,IAAAC,cAAA,UAAQe,KAAK,UAAS,oBCSVK,MAxBHA,KACV,MAAOhC,EAAOC,GAAYmB,mBAAS,IAEnCa,oBAAU,MACRvC,iBACE,MAAMM,QAAcP,IACpBQ,EAASD,GAEXkC,IACC,IAMH,OACEvB,IAAAC,cAAA,OAAKuB,UAAU,OACbxB,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAACK,EAAQ,CAACC,YAPWM,IACvBvB,EAAUM,GAAc,IAAIA,EAAWiB,OAOrCb,IAAAC,cAACd,EAAQ,CAACE,MAAOA,EAAOC,SAAUA,MCdzBmC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAjB,EAAA,GAAAkB,KAAAD,EAAAE,KAAA,UAAqBD,KAAKzC,IAAiD,IAAhD2C,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAAS/C,EACpE2C,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxC,IAAAC,cAACD,IAAMyC,WAAU,KACfzC,IAAAC,cAACoB,EAAG,QAORI","file":"static/js/main.f04ccfd5.chunk.js","sourcesContent":["// src/services/noteService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/notes';\r\n\r\nexport const getNotes = async () => {\r\n\tconst response = await axios.get(API_URL);\r\n\treturn response.data;\r\n};\r\n\r\nexport const addNote = async (note) => {\r\n\tconst response = await axios.post(`${API_URL}/add`, note);\r\n\treturn response.data;\r\n};\r\n\r\nexport const deleteNote = async (id) => {\r\n\tconst response = await axios.delete(`${API_URL}/${id}`);\r\n\treturn response.data;\r\n};\r\n\r\nexport const updateNote = async (id, note) => {\r\n\tconst response = await axios.post(`${API_URL}/update/${id}`, note);\r\n\treturn response.data;\r\n};\r\n","// frontend/src/components/NoteList.js\r\nimport React from 'react';\r\nimport { deleteNote } from '../services/noteService';\r\n\r\nconst NoteList = ({ notes, setNotes }) => {\r\n\tconst handleDelete = async (id) => {\r\n\t\tawait deleteNote(id);\r\n\t\tsetNotes((prevNotes) => prevNotes.filter((note) => note._id !== id));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Appunti</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t{notes.map((note) => (\r\n\t\t\t\t\t<li key={note._id}>\r\n\t\t\t\t\t\t{note.content}\r\n\t\t\t\t\t\t<button onClick={() => handleDelete(note._id)}>Delete</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NoteList;\r\n","// frontend/src/components/NoteForm.js\r\nimport React, { useState } from 'react';\r\nimport { addNote } from '../services/noteService';\r\n\r\nconst NoteForm = ({ onNoteAdded }) => {\r\n\tconst [content, setContent] = useState('');\r\n\r\n\tconst handleSubmit = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst newNote = await addNote({ content });\r\n\t\tonNoteAdded(newNote);  // Passa la nuova nota al callback\r\n\t\tsetContent('');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={content}\r\n\t\t\t\tonChange={(e) => setContent(e.target.value)}\r\n\t\t\t\tplaceholder=\"Scrivi un nuovo appunto\"\r\n\t\t\t/>\r\n\t\t\t<button type=\"submit\">Aggiungi</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default NoteForm;\r\n","// frontend/src/App.js\nimport React, { useState, useEffect } from 'react';\nimport NoteList from './components/NoteList';\nimport NoteForm from './components/NoteForm';\nimport { getNotes } from './services/noteService';\nimport './App.css'\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    async function fetchNotes() {\n      const notes = await getNotes();\n      setNotes(notes);\n    }\n    fetchNotes();\n  }, []);\n\n  const handleNoteAdded = (newNote) => {\n    setNotes((prevNotes) => [...prevNotes, newNote]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>App per Prendere Appunti</h1>\n      <NoteForm onNoteAdded={handleNoteAdded} />\n      <NoteList notes={notes} setNotes={setNotes} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}